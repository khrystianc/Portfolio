Visa
    Prefix(es): 4
    Length: 16
MasterCard
    Prefix(es): 51 through 55 and 2221 through 2720 
    Length: 16
American Express
    Prefix(es): 34 and 37
    Length: 15

Credit Card Validator:
* Must 10 to 19 digits in Length, depending on the issuer
* Fist few digits are must match the issuer Prefix for that credit company
* The last digit is a checksum or check digit using the Luhn Algorithm
* function only handles three types of card issuers: Visa, MasterCard and AmEx
* For Visa, the prefix must be "4" and the length must be 16
* For MasterCard, the prefix must be either "51" through "55" or "2221" through "2720", and the length must be 16
* For American Express, the prefix must be either "34" or "37", and the length must be 15

#Luhn's Algorithm
function isValid(cardNumber[1..length])
    sum := 0
    parity := length mod 2
    for i from 1 to length do
        if i mod 2 != parity then
            sum := sum + cardNumber[i]
        elseif cardNumber[i] > 4 then
            sum := sum + 2 * cardNumber[i] - 9
        else
            sum := sum + 2 * cardNumber[i]
        end if
    end for
    return sum mod 10 = 0
end function

#Comment test generation and methodology
#Tests that cover all prefix ranges
#No PEP8 linting errors
#do not remove passing tests; submit them all
#no "Random Testing"
#use "Boundary testing" and "Partition testing"

